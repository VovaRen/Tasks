#!/usr/bin/python3

"""Имитация текста

Прочитайте файл, указанный в командной строке.
Используйте str.split() (без аргументов) для получения всех слов в файле.
Вместо того, чтобы читать файл построчно, проще считать
его в одну гигантскую строку и применить к нему split() один раз.

Создайте "имитационный" словарь, который связывает каждое слово
со списком всех слов, которые непосредственно следуют за этим словом в файле.
Список слов может быть в любом порядке и должен включать дубликаты. 

Так, например, для текста "Привет, мир! Привет, Вселенная!" мы получим такой
имитационный словарь:
{'': ['Привет,'], 'Привет,': ['мир!', 'Вселенная!'], 'мир!': ['Привет,']}
Будем считать, в качестве ключа для первого слова в файле используется пустая строка.

С помощью имитационного словаря довольно просто генерировать случайные тексты, 
имитирующие оригинальный. Возьмите слово, посмотрите какие слова могут за ним, 
выберите одно из них наугад, выведите его и используйте это слово 
в следующей итерации.

Используйте пустую строку в качестве ключа для первого слова.
Если вы когда-нибудь застрянете на слове, которого нет в словаре,
вернетесь к пустой строке, чтобы продолжать генерацию текста.

Примечание: стандартный python-модуль random включает в себя метод 
random.choice(list), который выбирает случайный элемент из непустого списка.

"""

import random
import sys
import string


def read_text(filename):
    """
    Функция форматирует текст и возвращает
    все слова в тексте в виде списка, а
    так же уникальные слова в этом
    списке в виде множества.
    :param filename:
    :return words_set: set
    :return words: list
    """
    global words
    with open(filename) as file:
        text = file.read()
    text = text.replace("\n", " ")
    text = text.translate(str.maketrans('', '', string.punctuation)).lower()
    words = text.split()
    return words


def mimic_dict(filename):
    """Возвращает имитационный словарь, сопоставляющий каждое слово 
    со списом слов, которые непосредственно следуют за ним в тексте"""
    read_text(filename)
    mimic = {}
    for i in range(len(words)-1):
        if words[i] in mimic.keys():
            mimic[words[i]] += [words[i+1]]
        else:
            mimic[words[i]] = [words[i+1]]
    return mimic


def print_mimic(mimic_dict, word):
    """Принимает в качестве аргументов имитационный словарь и начальное слово,
    выводит 200 случайных слов."""
    first = words[0]
    for i in range(200):
        if word not in mimic_dict.keys():
            word = ''
        if word == '':
            mimic_dict[word] = [first]
            word = first
        else:
            word = random.choice(mimic_dict[word])
        print(word)


def main():
    if len(sys.argv) != 2:
        print('usage: ./mimic.py file-to-read')
        sys.exit(1)

    d = mimic_dict(sys.argv[1])
    print_mimic(d, '')


if __name__ == '__main__':
    main()
